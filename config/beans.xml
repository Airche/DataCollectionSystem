<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">


	<context:annotation-config />
	<context:component-scan
		base-package="com.legend.dao.impl,com.legend.service.impl,com.legend.action,com.legend.listener" />
	<aop:aspectj-autoproxy />


	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean name="dataSource" destroy-method="close"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />

		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/legend/model</value>
			</list>
		</property>
	</bean>

	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- 
			1、事务传播设置是 REQUIRED
			2、隔离级别是 DEFAULT；未提交读（脏读、不可重复读、幻读）-提交读（不可重复读、幻读）-重复读（幻读）-顺序读
			3、事务是 读/写
			4、事务超时默认是依赖于事务系统的，或者事务超时没有被支持。
			5、任何 RuntimeException 将触发事务回滚，但是任何 checked Exception 将不触发事务回滚
		 -->
		<tx:attributes>
			<!-- 写操作 -->
			<tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="clear*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="toogle*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="switch*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="copy*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="batch*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="new*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="append*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="create*" propagation="REQUIRED" isolation="DEFAULT" />
			<!-- 读操作 -->
			<tx:method name="load*" propagation="REQUIRED" isolation="DEFAULT"
				read-only="true" />
			<tx:method name="get*" propagation="REQUIRED" isolation="DEFAULT"
				read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" isolation="DEFAULT"
				read-only="true" />

			<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"
				read-only="true" />
		</tx:attributes>
	</tx:advice>

	<bean id="logger" class="com.legend.advice.Logger" />
	
	<aop:config>
		<aop:pointcut id="serviceOperation"
			expression="execution(public * com.legend.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice"  pointcut-ref="serviceOperation"/>
		<aop:aspect id="logerAspect" ref="logger">
			<aop:pointcut id="logOperation"
			expression="(execution(public * com.legend.service..*.save*(..)) 
								or execution(public * com.legend.service..*.update*(..)) 
								or execution(public * com.legend.service..*.delete*(..)) 
								or execution(public * com.legend.service..*.clear*(..)) 
								or execution(public * com.legend.service..*.toogle*(..)) 
								or execution(public * com.legend.service..*.add*(..)) 
								or execution(public * com.legend.service..*.switch*(..)) 
								or execution(public * com.legend.service..*.copy*(..)) 
								or execution(public * com.legend.service..*.batch*(..)) 
								or execution(public * com.legend.service..*.new*(..)) 
								or execution(public * com.legend.service..*.append*(..)) 
								or execution(public * com.legend.service..*.record*(..)) )
								and !bean(logService)
								" />
			<aop:around method="record" pointcut-ref="logOperation"/>
		</aop:aspect>
	</aop:config>
	
	<bean name="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

</beans>